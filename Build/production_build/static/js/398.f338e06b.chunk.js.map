{"version":3,"file":"static/js/398.f338e06b.chunk.js","mappings":"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","sources":["components/PageContainer.js","config/index.js","pages/users/UserSettings.js","../node_modules/@mui/icons-material/esm/KeyboardArrowLeft.js","../node_modules/@mui/system/esm/Box/Box.js","../node_modules/@mui/system/esm/Stack/Stack.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    // Hosted API base URL\r\n    // baseURL: 'https://us-central1-crowdfunder-e7a8f.cloudfunctions.net/api'\r\n    // Local base URL\r\n    baseURL: 'http://localhost:3005/'\r\n});","import { useEffect, useState } from \"react\";\r\nimport PageContainer from \"../../components/PageContainer\"\r\nimport axios from '../../config'\r\nimport { Button, Grid, IconButton, TextField, Typography } from \"@mui/material\";\r\nimport { Box, Stack } from \"@mui/system\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { KeyboardArrowLeft } from \"@mui/icons-material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst UserSettings = () => {\r\n    const { userData, isAuthenticated} = useContext(UserContext);\r\n    const [buttonMessage, setbuttonMessage] = useState(\"\");\r\n    const [passwordCheck, setPasswordCheck] = useState({});\r\n    const [passwordsMatch, setPasswordsMatch] = useState(false);\r\n    const [passwordHelperText, setPasswordHelperText] = useState(\"\");\r\n    \r\n    const [ form, setForm ] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        biography: \"\",\r\n        image: \"\",\r\n        email: \"\",\r\n    });\r\n    const navigate = useNavigate()\r\n    \r\n    useEffect(() => {\r\n        axios.get(`/users?address=${userData.address}`)\r\n        .then((response) => {\r\n            const user = response.data[0];\r\n            setForm({\r\n                first_name: user.first_name,\r\n                last_name: user.last_name,\r\n                biography: user.biography,\r\n                image: user.image,\r\n                email: user.email\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }, [])\r\n\r\n    const handleForm = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        setForm(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(passwordCheck.password1 == passwordCheck.password2) {\r\n            setPasswordsMatch(true);\r\n            setPasswordHelperText(\"\")\r\n            setForm(prevState => ({\r\n                ...prevState,\r\n                password: passwordCheck.password1,\r\n            }))\r\n        }\r\n        else {\r\n            setPasswordsMatch(false);\r\n            setPasswordHelperText(\"Passwords do not match\")\r\n        }\r\n    }, [passwordCheck]);\r\n\r\n    const handleSubmit = () => {\r\n        axios.put(`/users/${userData.id}`,form, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${userData.token}`\r\n            }\r\n        })\r\n        .then((response) => {\r\n            setbuttonMessage(\"Saved!\")\r\n        })\r\n        .catch()\r\n    };\r\n    \r\n    return(\r\n        <PageContainer title={\"Settings\"} description=\"user settings\">\r\n            \r\n            <Grid container direction={\"row\"}>\r\n                {/* ----- Nav ----- */}\r\n                <IconButton onClick={() => navigate(-1)}>\r\n                  <KeyboardArrowLeft/>\r\n                </IconButton>\r\n                <Typography variant=\"h3\" marginY={2}>Account Settings</Typography>\r\n              </Grid>\r\n              {isAuthenticated ? (\r\n            <>\r\n            <Box \r\n                sx={{ \r\n                    padding: 3, \r\n                    width: '100%', \r\n                    height: '100%', \r\n                    bgcolor: '#fafafa',\r\n                    border: '1px solid #f2f2f2',\r\n                    borderRadius: 2\r\n                }}\r\n            >\r\n              <Grid container sx={{ spacing: 3 }}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography sx={{ fontSize: \"20px\", fontWeight: 'bold' }}>\r\n                        Edit Profile\r\n                    </Typography>\r\n                    <Box sx={{ borderRadius: 2, height: '100%', width: '100%', pr: 2, pt: 2 }}>\r\n                        <Stack>\r\n                            <Box>\r\n                                <Typography variant=\"subtitle1\"\r\n                                    fontWeight={500}\r\n                                    component='label'\r\n                                    htmlFor='first_name'\r\n                                >\r\n                                    First name\r\n                                </Typography>\r\n                                <TextField\r\n                                    sx={{my: 1}}\r\n                                    id='first_name'\r\n                                    name='first_name'\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={handleForm}\r\n                                    value={form.first_name}\r\n                                />\r\n                            </Box>\r\n                            <Box>\r\n                                <Typography variant=\"subtitle1\"\r\n                                    fontWeight={500}\r\n                                    component='label'\r\n                                    htmlFor='last_name'\r\n                                >\r\n                                    Last name\r\n                                </Typography>\r\n                                <TextField\r\n                                    sx={{my: 1}}\r\n                                    id='last_name'\r\n                                    name='last_name'\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={handleForm}\r\n                                    value={form.last_name}\r\n                                />\r\n                            </Box>\r\n                            <Box>\r\n                                <Typography variant=\"subtitle1\"\r\n                                    fontWeight={500}\r\n                                    component='label'\r\n                                    htmlFor='email'\r\n                                >\r\n                                    Email\r\n                                </Typography>\r\n                                <TextField\r\n                                    sx={{my: 1}}\r\n                                    id='email'\r\n                                    name='email'\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={handleForm}\r\n                                    value={form.email}\r\n                                />\r\n                            </Box>\r\n                            <Box>\r\n                                <Typography variant=\"subtitle1\"\r\n                                    fontWeight={500}\r\n                                    component='label'\r\n                                    htmlFor='biography'\r\n                                >\r\n                                    Biography\r\n                                </Typography>\r\n                                <TextField\r\n                                    sx={{my: 1}}\r\n                                    id='biography'\r\n                                    name='biography'\r\n                                    variant=\"outlined\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                    onChange={handleForm}\r\n                                    value={form.biography}\r\n                                />\r\n                            </Box>\r\n                        </Stack>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={6} sx={{mt: {xs: 5, md: 0}}}>\r\n                    <Typography sx={{ fontSize: \"20px\", fontWeight: 'bold' }}>\r\n                        Change Password\r\n                    </Typography>\r\n                    <Box sx={{ borderRadius: 2, height: '100%', width: '100%', pr: 2, pt: 2 }}>\r\n                    <Stack>\r\n                            <Box>\r\n                                <Typography variant=\"subtitle1\"\r\n                                    fontWeight={500}\r\n                                    component='label'\r\n                                    htmlFor='password1'\r\n                                >\r\n                                    New Password\r\n                                </Typography>\r\n                                <TextField\r\n                                    error={!passwordsMatch}\r\n                                    sx={{my: 1}}\r\n                                    id='password1'\r\n                                    name='password1'\r\n                                    variant=\"outlined\"\r\n                                    type=\"password\"\r\n                                    fullWidth\r\n                                    onChange={ (e) => {\r\n                                        setPasswordCheck(prevState => ({\r\n                                            ...prevState,\r\n                                            password1: e.target.value\r\n                                        }));\r\n                                    }\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            <Box>\r\n                                <Typography variant=\"subtitle1\"\r\n                                    fontWeight={500}\r\n                                    component='label'\r\n                                    htmlFor='password2'\r\n                                >\r\n                                    Confirm New Password\r\n                                </Typography>\r\n                                <TextField\r\n                                    error={!passwordsMatch}\r\n                                    sx={{my: 1}}\r\n                                    id='password2'\r\n                                    name='password2'\r\n                                    variant=\"outlined\"\r\n                                    type=\"password\"\r\n                                    helperText={passwordHelperText}\r\n                                    fullWidth\r\n                                    onChange={ (e) => {\r\n                                        setPasswordCheck(prevState => ({\r\n                                            ...prevState,\r\n                                            password2: e.target.value\r\n                                        }));\r\n                                    }\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </Stack>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={6} sx={{mt: 5}}>\r\n                    <Typography sx={{ fontSize: \"20px\", fontWeight: '500' }}>\r\n                        Profile Image\r\n                    </Typography>\r\n                    <Box sx={{ borderRadius: 2, height: '100%', width: '100%', pr: 2, pt: 2 }}>\r\n\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} mt={2} display>\r\n                    <Button onClick={handleSubmit} variant=\"contained\" size=\"large\">Save</Button>\r\n                    <Typography color='#16b56b' sx={{fontWeight: '500', pt: 1}}>{buttonMessage}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h1>Please log in to view this page</h1>\r\n            </>\r\n          )}\r\n        </PageContainer>\r\n      )     \r\n}\r\n\r\nexport default UserSettings; ","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import PropTypes from 'prop-types';\nimport createStack from './createStack';\n/**\n *\n * Demos:\n *\n * - [Stack (Material UI)](https://mui.com/material-ui/react-stack/)\n * - [Stack (MUI System)](https://mui.com/system/react-stack/)\n *\n * API:\n *\n * - [Stack API](https://mui.com/system/api/stack/)\n */\nconst Stack = createStack();\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;"],"names":["_ref","title","description","children","_jsxs","Helmet","_jsx","name","content","axios","baseURL","_useContext","useContext","UserContext","userData","isAuthenticated","_useState","useState","_useState2","_slicedToArray","buttonMessage","setbuttonMessage","_useState3","_useState4","passwordCheck","setPasswordCheck","_useState5","_useState6","passwordsMatch","setPasswordsMatch","_useState7","_useState8","passwordHelperText","setPasswordHelperText","_useState9","first_name","last_name","biography","image","email","_useState10","form","setForm","navigate","useNavigate","useEffect","concat","address","then","response","user","data","catch","err","console","log","handleForm","e","target","value","prevState","_objectSpread","_defineProperty","password1","password2","password","PageContainer","Grid","container","direction","IconButton","onClick","KeyboardArrowLeft","Typography","variant","marginY","_Fragment","Box","sx","padding","width","height","bgcolor","border","borderRadius","spacing","item","xs","md","fontSize","fontWeight","pr","pt","Stack","component","htmlFor","TextField","my","id","fullWidth","onChange","multiline","mt","error","type","helperText","display","Button","headers","token","size","color","createSvgIcon","d","createBox","createStack"],"sourceRoot":""}