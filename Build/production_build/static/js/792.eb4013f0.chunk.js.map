{"version":3,"file":"static/js/792.eb4013f0.chunk.js","mappings":"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","sources":["components/PageContainer.js","config/index.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","pages/users/Login.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    // Hosted API base URL\r\n    baseURL: 'https://us-central1-crowdfunder-e7a8f.cloudfunctions.net/api'\r\n    // Local base URL\r\n    // baseURL: 'http://localhost:3005/'\r\n});","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Grid, Box, Card, Stack, Typography, Button, FormGroup, Checkbox, TextField, FormControlLabel, IconButton } from '@mui/material';\r\nimport axios from '../../config';\r\nimport PageContainer from \"../../components/PageContainer\";\r\nimport { ChevronLeft } from '@mui/icons-material';\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nconst Login = () => {\r\n    \r\n    const { userData, setUserData, setIsAuthenticated} = useContext(UserContext);\r\n    const navigate = useNavigate();\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const handleForm = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        setErrorMessage(\"\")\r\n\r\n        setForm(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const submitForm = () => {\r\n        axios.post('/users/login', {\r\n            email: form.email,\r\n            password: form.password\r\n        })\r\n        .then((response) => {\r\n            console.log(response)\r\n            setUserData({\r\n                token: response.data.token,\r\n                id: response.data.user._id,\r\n                address: response.data.user.address,\r\n                email: response.data.user.email,\r\n                first_name: response.data.user.first_name,\r\n                last_name: response.data.user.last_name,\r\n                image: response.data.user.image,\r\n            })\r\n            setIsAuthenticated(true)\r\n            navigate(`/dashboard`);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            setErrorMessage(err.response.data.msg)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <PageContainer title=\"Login\" description=\"login\">\r\n            <Grid container spacing={0} justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh' }}>\r\n                <Card elevation={9} sx={{ p: 4, zIndex: 1, width: '100%', maxWidth: '500px' }}>\r\n                    <Stack direction=\"row\" alignItems=\"center\" mb={3} spacing={3}>\r\n                        <Box width={24}>\r\n                            <IconButton onClick={() => navigate(-1)}>\r\n                                <ChevronLeft/>\r\n                            </IconButton>\r\n                        </Box>\r\n                        <Typography fontWeight={550} variant='h3' textAlign={'center'}>\r\n                            Login\r\n                        </Typography>\r\n                    </Stack>\r\n                    <Stack>\r\n                        <Box>\r\n                            <Typography variant=\"subtitle1\"\r\n                                fontWeight={500} \r\n                                component=\"label\" \r\n                                htmlFor='username' mb=\"5px\"\r\n                            >\r\n                                    Email\r\n                            </Typography>\r\n                            <TextField \r\n                                id=\"email\" \r\n                                name='email'\r\n                                variant=\"outlined\" \r\n                                fullWidth \r\n                                onChange={handleForm}\r\n                            />\r\n                        </Box>\r\n                        <Box mt=\"25px\">\r\n                            <Typography variant=\"subtitle1\"\r\n                                fontWeight={500} \r\n                                component=\"label\" \r\n                                htmlFor='password' \r\n                                mb=\"5px\" \r\n                            >\r\n                                Password\r\n                            </Typography>\r\n                            <TextField \r\n                                id=\"password\" \r\n                                name='password'\r\n                                type=\"password\" \r\n                                variant=\"outlined\" \r\n                                fullWidth \r\n                                onChange={handleForm}\r\n                            />\r\n                        </Box>\r\n                        <Typography color='red' mt={'10px'}>{errorMessage}</Typography>\r\n                        {/* <Stack justifyContent=\"space-between\" direction=\"row\" alignItems=\"center\" my={2}>\r\n                            <FormGroup>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox defaultChecked />}\r\n                                    label=\"Remember me\"\r\n                                />\r\n                            </FormGroup>\r\n                            <Typography\r\n                                component={Link}\r\n                                to=\"/\"\r\n                                fontWeight=\"500\"\r\n                                sx={{\r\n                                    textDecoration: 'none',\r\n                                    color: 'primary.main',\r\n                                }}\r\n                            >\r\n                                Forgot Password ?\r\n                            </Typography>\r\n                        </Stack> */}\r\n                    </Stack>\r\n                    <Box>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            fullWidth\r\n                            onClick={submitForm}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                    </Box>\r\n                    <Stack direction='row' spacing={1} justifyContent='center' mt={3}>\r\n                        <Typography fontWeight='500'>\r\n                            Don't have an account yet?\r\n                        </Typography>\r\n                        <Typography component={Link} to='/register' fontWeight=\"500\" sx={{textDecoration: 'none', color: 'primary.main'}}>\r\n                            Register\r\n                        </Typography>\r\n                    </Stack>\r\n                </Card>\r\n            </Grid>\r\n        </PageContainer>\r\n    )\r\n    \r\n}\r\n\r\nexport default Login;"],"names":["_ref","title","description","children","_jsxs","Helmet","_jsx","name","content","axios","baseURL","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","_props$raised","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","_useContext","useContext","UserContext","setUserData","userData","setIsAuthenticated","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","errorMessage","setErrorMessage","_useState3","email","password","_useState4","form","setForm","handleForm","e","target","value","prevState","_objectSpread","_defineProperty","PageContainer","Grid","container","spacing","justifyContent","alignItems","sx","height","Card","p","zIndex","width","maxWidth","Stack","direction","mb","Box","IconButton","onClick","ChevronLeft","Typography","fontWeight","variant","textAlign","component","htmlFor","TextField","id","fullWidth","onChange","mt","type","color","Button","size","then","response","console","log","token","data","user","_id","address","first_name","last_name","image","catch","err","msg","Link","to","textDecoration"],"sourceRoot":""}